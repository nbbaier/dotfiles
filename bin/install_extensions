#!/bin/bash

# Function to install extensions
install_extensions() {
   local tool="$1"
   local extensions_file="$2"
   local EXTENSIONS

   # Get list of installed extensions based on the tool
   if [ "$tool" == "cursor" ]; then
      EXTENSIONS=$(cursor --list-extensions)
   elif [ "$tool" == "code" ]; then
      EXTENSIONS=$(code --list-extensions)
   else
      echo "Unsupported tool: $tool"
      exit 1
   fi

   # Read and install extensions
   while read -r extension || [[ -n "$extension" ]]; do
      if [[ -z "$extension" ]]; then
         continue
      fi

      if echo "$EXTENSIONS" | grep -q "$extension"; then
         echo "$extension is already installed"
      else
         echo "installing $extension"
         if [ "$tool" == "cursor" ]; then
            cursor --install-extension "$extension" >/dev/null
         else
            code --install-extension "$extension" >/dev/null
         fi
      fi
   done <"$extensions_file"
}

# Check arguments
if [[ $# -ne 2 ]]; then
   echo "Usage: $0 <subcommand> <extensions_file>"
   echo "Subcommands: code, cursor"
   exit 1
fi

# Parse subcommand
case "$1" in code | cursor)
   install_extensions "$1" "$2"
   ;;
*)
   echo "Invalid subcommand. Use 'code' or 'cursor'."
   exit 1
   ;;
esac
