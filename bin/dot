#!/usr/bin/env bash

#------------------------------------------------#
# WORK IN PROGRESS NEED TO EDIT THIS EXTENSIVELY #
#------------------------------------------------#

# script is based on:
# https://github.com/webpro/dotfiles/blob/main/bin/dot
# https://github.com/holman/dotfiles/blob/master/bin/dot

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1
SUB_COMMAND_NAME=$2

sub_help() {
	echo "Usage: $BIN_NAME <command>"
	echo
	echo "Commands:"
	echo "   clean            Clean up caches (brew, cargo, gem, go, uv)"
	# echo "   dock             Apply macOS Dock settings"
	# echo "   duti             Set default apps for file types (UTI)"
	echo "   edit             Open dotfiles in IDE ($EDITOR)"
	echo "   help             This help message"
	echo "   macos            Apply macOS system defaults"
	# echo "   test             Run tests"
	echo "   update           Update packages and pkg managers"
}

sub_clean() {
	echo "$ brew cleanup"
	brew cleanup
	echo ''

	echo "$ cargo cache --autoclean"
	cargo cache --autoclean
	echo ''

	echo "$ gem cleanup"
	gem cleanup
	echo ''

	echo "$ go clean -cache"
	go clean -cache
	echo ''

	echo "$ uv cache clean"
	uv cache clean
	echo ''
}

# sub_dock() {
# 	. "${DOTFILES}/macos/dock.sh" && echo "Dock reloaded."
# }

sub_edit() {
	sh -c "$EDITOR $DOTFILES"
}

sub_update() {
	topgrade
}

# sub_duti() {
# 	duti -v "${DOTFILES}/install/duti"
# }

sub_macos() {
	for DEFAULTS_FILE in "${DOTFILES}"/macos/defaults*.sh; do
		echo "Applying ${DEFAULTS_FILE}" && . "${DEFAULTS_FILE}"
	done
	echo "Done. Some changes may require a logout/restart to take effect."
}

case $COMMAND_NAME in
"" | "-h" | "--help")
	sub_help
	;;
*)
	shift
	sub_${COMMAND_NAME} $@
	if [ $? = 127 ]; then
		echo "'$COMMAND_NAME' is not a known command or has errors." >&2
		sub_help
		exit 1
	fi
	;;
esac
